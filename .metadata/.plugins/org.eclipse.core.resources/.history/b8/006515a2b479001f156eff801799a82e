package demo;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class StreamExample {

	public static void main(String[] args) {
		System.out.println("hello");
		
	List<String> names=Arrays.asList("Vandana", "Chandana", "Kalyani", "Sai krupa", "Mokshaa", "Veda","Hari");
	Long c=names.stream().filter(s->s.startsWith("V")).count();
	System.out.println(c);

	System.out.println("******************************************************");
		names.stream().filter(s->s.length()>5).forEach(s->System.out.println(s));
		System.out.println("******************************************************");
		names.stream().filter(s->s.endsWith("i")).map(s->s.toUpperCase()).forEach(s->System.out.println(s));
		
		
		System.out.println("******************************************************");
		
		//names.stream().filter(s->s.startsWith("V")).limit(0);
		//System.out.println(names.stream());
		
		
	List<String> name2=Arrays.asList("Radha", "Vijaya", "Shantha","Suguna");
			
			//.filter(s->s.startsWith("S")).limit(1).forEach(s->System.out.println(s));
	
	
	System.out.println("******************************************************");	
			
		Stream<String> names3=Stream.concat(names.stream(), name2.stream());
		boolean name5=names3.anyMatch(s->s.equalsIgnoreCase("Veda"));
		System.out.println("******************************************************");
		System.out.println(name5);
		
		names3.filter(s->s.endsWith("a")).map(s->s.toLowerCase()).forEach(s->System.out.println(s));
		
		System.out.println("******************************************************");	
	List<Integer> values=Arrays.asList(1, 2, 2,9,9,6, 3, 3, 5,4, 7,8,8);
		values.stream().distinct().forEach(s->System.out.println(s));
		values.stream().filter((Integer num)->num>3).forEach(s->System.out.println(s));
		
		System.out.println("******************************************************");	
		
		List<Integer> values2=values.stream().distinct().sorted().collect(Collectors.toList());
		System.out.println(values2.get(5));
		//names.stream().filter(s->s.contains("dana")).collect(collections.list))
		
		
		
	}
	
	
	
}
